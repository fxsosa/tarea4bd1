--para ejecutar el script
--@C:\SQL\t4_sosaramos_matiasantonio.sql

--Conexion al sistema
CONNECT SYSTEM/admin;

--Si existe el usuario, eliminar
DROP USER matias CASCADE;

--Creacion del usuario
CREATE USER matias IDENTIFIED BY admin DEFAULT TABLESPACE users TEMPORARY TABLESPACE temp QUOTA UNLIMITED ON users;

--Asignacion de permisos
GRANT CREATE SESSION, CREATE TABLE, CREATE SEQUENCE, CREATE ANY INDEX, CREATE VIEW, CREATE TRIGGER TO matias;

--desconectar usuario SYSTEM
DISCONNECT;

--Iniciar sesion usuario
CONNECT matias/admin;

--formato fecha
alter session set nls_date_format='dd/mm/yyyy';

--Creacion de tablas

CREATE TABLE SOCIOS(
       NROSOCIO INTEGER NOT NULL,
       NOMBRES VARCHAR2(30),
       APELLIDOS VARCHAR2(30),
       CI INTEGER UNIQUE,
       EDAD INTEGER,
       SOCIOPROPONENTE INTEGER,
       CONSTRAINT SOCIOS_NROSOCIO_PK PRIMARY KEY (NROSOCIO),
       CONSTRAINT SOCIOS_SOCIOPROP_FK FOREIGN KEY (SOCIOPROPONENTE) REFERENCES SOCIOS(NROSOCIO),
       CONSTRAINT SOCIOS_EDAD CHECK (EDAD > 18)
);

--SEQ de nrosocio
CREATE SEQUENCE SOCIOS_NROSOCIO_SEQ
       START WITH 1
       INCREMENT BY 1;

--trigger del SEQ de nrosocio
CREATE OR REPLACE TRIGGER TRIG_NROSOCIO_SEQ
       BEFORE INSERT ON SOCIOS
       FOR EACH ROW
       BEGIN
              SELECT SOCIOS_NROSOCIO_SEQ.NEXTVAL INTO :NEW.NROSOCIO FROM DUAL;
       END TRIG_NROSOCIO_SEQ;
/

INSERT INTO SOCIOS(NOMBRES, APELLIDOS, CI, EDAD)
VALUES('Matias Antonio', 'Sosa Ramos', 5174741, 22);
INSERT INTO SOCIOS(NOMBRES, APELLIDOS, CI, EDAD, SOCIOPROPONENTE)
VALUES('Carlos Miguel', 'Gomez', 4174741, 22, 1);
INSERT INTO SOCIOS(NOMBRES, APELLIDOS, CI, EDAD, SOCIOPROPONENTE)
VALUES('Luz', 'Hernandez', 3174741, 32, 1);
INSERT INTO SOCIOS(NOMBRES, APELLIDOS, CI, EDAD, SOCIOPROPONENTE)
VALUES('Carolina', 'Diaz', 2174741, 34, 2);
INSERT INTO SOCIOS(NOMBRES, APELLIDOS, CI, EDAD, SOCIOPROPONENTE)
VALUES('Lida', 'Perez', 1174741, 52, 4);

CREATE TABLE PRESTAMO(
       NROPRESTAMO INTEGER NOT NULL,
       NROSOCIO INTEGER,
       FECHA DATE,
       TASA NUMBER(2,1),
       MONTO INTEGER,
       SALDO INTEGER,
       CONSTRAINT PRESTAMO_NROPRESTAMO_PK PRIMARY KEY (NROPRESTAMO),
       CONSTRAINT PRESTAMO_NROSOCIO_FK FOREIGN KEY (NROSOCIO) REFERENCES SOCIOS(NROSOCIO),
       CONSTRAINT PRESTAMO_MONTO CHECK(MONTO > 0)
);

--SEQ DE NROPRESTAMO
CREATE SEQUENCE PRESTAMO_NROPRESTAMO_SEQ
       START WITH 1
       INCREMENT BY 1;

--trigger de SEQ DE NROPRESTAMO
CREATE OR REPLACE TRIGGER TRIG_NROPRESTAMO_SEQ
       BEFORE INSERT ON PRESTAMO
       FOR EACH ROW
       BEGIN
              SELECT PRESTAMO_NROPRESTAMO_SEQ.NEXTVAL INTO :NEW.NROPRESTAMO FROM DUAL;
       END;
/
--trigger de prestamofecha
CREATE OR REPLACE TRIGGER TRIG_PRESTAMO_FECHA
       BEFORE INSERT ON PRESTAMO
       FOR EACH ROW
       BEGIN
              :NEW.FECHA := sysdate;
       END;
/
--fecha
INSERT INTO PRESTAMO(NROSOCIO, FECHA, TASA, MONTO, SALDO)
VALUES(1, '12/02/2020', 1.5, 100000, 0);
INSERT INTO PRESTAMO(NROSOCIO, TASA, MONTO, SALDO)
VALUES(1, 1.5, 100000, 0);
INSERT INTO PRESTAMO(NROSOCIO, TASA, MONTO, SALDO)
VALUES(2, 1.5, 100000, 0);
INSERT INTO PRESTAMO(NROSOCIO, TASA, MONTO, SALDO)
VALUES(3, 1.5, 200000, 0);
INSERT INTO PRESTAMO(NROSOCIO, TASA, MONTO, SALDO)
VALUES(5, 1.5, 300000, 0);

CREATE TABLE CUOTA(
       NROPRESTAMO INTEGER NOT NULL,
       NROCUOTA INTEGER NOT NULL,
       FECHA_VENCE DATE,
       FECHA_PAGO DATE,
       IMPORTE INTEGER,
       CONSTRAINT CUOTA_NROPRESTAMO_NROCUOTA_PK PRIMARY KEY (NROPRESTAMO, NROCUOTA),
       CONSTRAINT CUOTA_NROPRESTAMO_FK FOREIGN KEY (NROPRESTAMO) REFERENCES PRESTAMO(NROPRESTAMO),
       CONSTRAINT CUOTA_IMPORTE CHECK (IMPORTE > 0)
);
